{% set name = "dakota" %}
{% set version = "6.16.0" %}
{% set sha256sum = "49684ade2a937465d85b0fc69c96408be38bc1603ed2e7e8156d93eee3567d2f" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: dakota{{ version }}.tar.gz
  url: https://dakota.sandia.gov/sites/default/files/distributions/public/dakota-{{ version }}-public-src-cli.tar.gz
  sha256: {{ sha256sum }}
  patches:
    - surfpack_py_bindings.patch
    - python.patch
    - tests.patch
    - link_librt.patch
    # - use_external_pybind11.patch

build:
  number: 0
  skip: true  # [win or osx or py<38]

requirements:
  build:
    - cmake
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('fortran') }}
    - {{ mpi }} # [mpi != 'nompi']
  host:
    - {{ mpi }} # [mpi != 'nompi']
    - boost-cpp {{ boost_cpp }}
    - libblas {{ libblas }}
    - libcblas {{ libcblas }}
    - liblapack {{ liblapack }}
    - python
    - perl
    - numpy {{ numpy }}
    - swig
    - doxygen
    - gsl
    - hdf5
  run:
    - python
    - {{ pin_compatible("boost-cpp", max_pin='x.x') }}
    - {{ pin_compatible("numpy", max_pin='x.x') }}
    - {{ pin_compatible("mpi", max_pin='x.x') }} # [mpi != 'nompi']
test:
  files:
    - UQ.in
    - rosenbrock.py
  requires:
    - cmake
    - perl
  imports:
    - dakota
    - dakota.interfacing
    - dakota.interfacing.dprepro
    - pysurfpack
  commands:
    - dakota -i UQ.in
    - cmake -E copy_directory $PREFIX/share/dakota/test .
    - ./dakota_test.perl --label-regex=AcceptanceTest
    - ./dakota_test.perl --label-regex=AcceptanceTest --parallel # [mpi != 'nompi']

about:
  home: https://dakota.sandia.gov
  license: LGPL-3.0
  license_family: LGPL
  license_file: LICENSE
  summary: The Dakota project delivers software for optimization and uncertainty quantification.
  description: |
    The Dakota project delivers both state-of-the-art research and robust, 
    usable software for optimization and UQ. Broadly, the Dakota software's 
    advanced parametric analyses enable design exploration, model calibration, 
    risk analysis, and quantification of margins and uncertainty with computational
    models. The Dakota toolkit provides a flexible, extensible interface 
    between such simulation codes and its iterative systems analysis methods.
  doc_url: https://dakota.sandia.gov/content/610-reference-manual
  dev_url: https://dakota.sandia.gov/

extra:
  recipe-maintainers:
    - looooo
